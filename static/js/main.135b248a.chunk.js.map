{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Dot","props","width","height","x","y","fill","stroke","onClick","Display","sideLength","id","dots","map","dot","index","i","row","Math","floor","column","lighting","renderDot","Board","handleClick","state","slice","setState","Array","Object","assign","version","xmlns","this","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGA,SAASA,EAAIC,GACX,OACE,sBAAMC,MAAOD,EAAMC,MAAOC,OAAQF,EAAME,OAAQC,EAAGH,EAAMG,EAAGC,EAAGJ,EAAMI,EAAGC,KAAML,EAAMK,KAAMC,OAAQN,EAAMM,OAAQC,QAASP,EAAMO,UAInI,SAASC,EAAQR,GACf,IAAMS,EAAa,IAenB,OACE,mBAAGC,GAAG,UAAN,SAJOV,EAAMW,KAAKC,KAAI,SAACC,EAAKC,GAAN,OATxB,SAAoBC,GAClB,IAAMF,EAAMb,EAAMW,KAAKI,GACjBC,EAAMC,KAAKC,MAAMH,EAJT,GAKRI,EAASJ,EALD,EAMd,OAAO,cAAChB,EAAD,CAAKE,MAAOQ,EAAYP,OAAQO,EAAYN,EAAGM,EAAaU,EAAQf,EAAGK,EAAaO,EAAKX,KAAMQ,EAAIO,SAAW,UAAY,UAAWd,OAAO,UAAUC,QAAS,kBAAMP,EAAMO,QAAQQ,MAKpJM,CAAUP,Q,IAU9CQ,E,kDAEJ,WAAYtB,GAAQ,IAAD,uBACjB,cAAMA,IAQRuB,YAAc,SAACR,GACb,IAAMJ,EAAO,EAAKa,MAAMb,KAAKc,QAC7Bd,EAAKI,GAAGK,UAAYT,EAAKI,GAAGK,SAC5B,EAAKM,SAAS,CAACf,KAAMA,KAVrB,IAAME,EAAM,CAACO,UAAU,GAFN,OAIjB,EAAKI,MAAQ,CACXb,KAAMgB,MAAM,GAAGtB,OAAOO,KAAI,kBAAMgB,OAAOC,OAAO,GAAIhB,OALnC,E,qDAgBjB,OACE,qBAAKiB,QAAQ,MAAMC,MAAM,6BAA6B9B,MAAM,OAAOC,OAAO,OAA1E,SACE,cAACM,EAAD,CAASG,KAAMqB,KAAKR,MAAMb,KAAMJ,QAASyB,KAAKT,oB,GApBlCU,IAAMC,WAkCXC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCjDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.135b248a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nfunction Dot(props) {\r\n  return (\r\n    <rect width={props.width} height={props.height} x={props.x} y={props.y} fill={props.fill} stroke={props.stroke} onClick={props.onClick}/>\r\n  );\r\n}\r\n\r\nfunction Display(props) {\r\n  const sideLength = 100;\r\n  const columns = 2;\r\n\r\n  function renderDot (i) {\r\n    const dot = props.dots[i];\r\n    const row = Math.floor(i / columns);\r\n    const column = i % columns;\r\n    return <Dot width={sideLength} height={sideLength} x={sideLength * column} y={sideLength * row} fill={dot.lighting ? \"#ff0000\" : \"#ffffff\"} stroke=\"#000000\" onClick={() => props.onClick(i)} />;\r\n  };\r\n\r\n  function renderAllDot() {\r\n    // TODO listをpropsから取得する\r\n    return props.dots.map((dot, index) => renderDot(index));\r\n  }\r\n\r\n  return (\r\n    <g id=\"display\">\r\n      {renderAllDot()}\r\n    </g>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  // TODO ドットを複製する\r\n  constructor(props) {\r\n    super(props);\r\n    const dot = {lighting: false, };\r\n\r\n    this.state = {\r\n      dots: Array(4).fill().map(() => Object.assign({}, dot)),\r\n    };\r\n  }\r\n\r\n  handleClick = (i) => {\r\n    const dots = this.state.dots.slice();\r\n    dots[i].lighting = !dots[i].lighting\r\n    this.setState({dots: dots})\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000\" height=\"1000\">\r\n        <Display dots={this.state.dots} onClick={this.handleClick}/>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}